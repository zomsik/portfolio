{"version":3,"file":"static/js/288.c2dba0a3.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/components/Scratch/styles.module.css?a36f","components/Scratch/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"styles_box__+0uOE\",\"boxInnerUp\":\"styles_boxInnerUp__QN7s6\",\"boxInnerDown\":\"styles_boxInnerDown__d86bE\",\"optionButtons\":\"styles_optionButtons__ZZ4W7\",\"btn\":\"styles_btn__wx5EW\",\"circle\":\"styles_circle__3JlWz\",\"noselect\":\"styles_noselect__rZwkh\"};","import {useEffect, useRef, useState} from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst Scratch = () => { \r\n\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const canvasRef = useRef(null);\r\n    const ctxRef = useRef(null);\r\n\r\n\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    var mousePos = { x:0, y:0 };\r\n    var lastPos = mousePos;\r\n\r\n    useEffect(() => {\r\n        \r\n        const canvas = canvasRef.current;\r\n\r\n        canvas.style.width = \"100%\";\r\n        canvas.style.height = \"100%\";\r\n        canvas.width = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n        \r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.scale(1, 1);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.fillStyle = \"#736c75\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\r\n        ctx.globalCompositeOperation = 'destination-out';\r\n\r\n        ctx.lineWidth = 15;\r\n        ctxRef.current = ctx;\r\n\r\n\r\n        \r\n        canvas.addEventListener('touchmove', function(e) {\r\n\r\n            e.preventDefault();\r\n          },false);\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    const startDrawing = ({nativeEvent}) => {\r\n       \r\n        const {offsetX, offsetY} = nativeEvent;\r\n        ctxRef.current.beginPath();\r\n        ctxRef.current.moveTo(offsetX, offsetY);\r\n        ctxRef.current.lineTo(offsetX, offsetY);\r\n        ctxRef.current.stroke();\r\n        setIsDrawing(true);\r\n        nativeEvent.preventDefault();\r\n    };\r\n\r\n    const startDrawingT = ({nativeEvent}) => {\r\n\r\n        lastPos = getMousePos(canvasRef.current, nativeEvent);\r\n        ctxRef.current.beginPath();\r\n        ctxRef.current.moveTo(lastPos.x, lastPos.y);\r\n        ctxRef.current.lineTo(lastPos.x, lastPos.y);\r\n        ctxRef.current.stroke();\r\n        setIsDrawing(true);\r\n    };\r\n\r\n    const getMousePos = (canvasDom, mouseEvent) => {\r\n        const rect = canvasDom.getBoundingClientRect();\r\n        return {\r\n          x: mouseEvent.touches[0].clientX - rect.left,\r\n          y: mouseEvent.touches[0].clientY - rect.top\r\n        };\r\n      }\r\n\r\n    const draw = ({nativeEvent}) => {\r\n        if(!isDrawing) {\r\n            return;\r\n        }\r\n\r\n        const {offsetX, offsetY} = nativeEvent;\r\n        ctxRef.current.lineTo(offsetX, offsetY);\r\n        ctxRef.current.stroke();\r\n        nativeEvent.preventDefault();\r\n    };\r\n\r\n\r\n\r\n    \r\n    const drawT = ({nativeEvent}) => {\r\n        if(!isDrawing) {\r\n            return;\r\n        }\r\n\r\n        lastPos = getMousePos(canvasRef.current, nativeEvent);\r\n\r\n        ctxRef.current.lineTo(lastPos.x, lastPos.y);\r\n        ctxRef.current.stroke();\r\n    };\r\n\r\n    const stopDrawing = () => {\r\n\r\n        ctxRef.current.closePath();\r\n        setIsDrawing(false);\r\n    };\r\n\r\n    const ResetScratch = () => {\r\n\r\n        \r\n        ctxRef.current.globalCompositeOperation = 'destination-over';\r\n        ctxRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        ctxRef.current.globalCompositeOperation = 'destination-out';\r\n    };\r\n\r\n    const ClearScratch = () => {\r\n        ctxRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.width);\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"scratchDiv\">\r\n            <div className={styles.optionButtons}>\r\n\r\n                <div onClick={ResetScratch} id={styles[\"btn\"]}><span  className={styles.noselect}>Reset</span><div id={styles[\"circle\"]}></div></div>\r\n                <div onClick={ClearScratch} id={styles[\"btn\"]}><span  className={styles.noselect}>{t('Reveal')}</span><div id={styles[\"circle\"]}></div></div>\r\n            </div>\r\n\r\n            \r\n            <div className={styles.box}>\r\n            <div className={styles.boxInnerUp}>\r\n            <div className={styles.boxInnerDown}>\r\n            <canvas className={styles.canvasContainer}\r\n                ref={canvasRef}\r\n                onMouseDown={startDrawing}\r\n                onMouseMove={draw}\r\n                onMouseUp={stopDrawing}\r\n                onMouseLeave={stopDrawing}\r\n                onTouchStart={startDrawingT}\r\n                onTouchEnd={stopDrawing}\r\n                onTouchMove={drawT}\r\n                \r\n                >\r\n            </canvas>\r\n            </div>     </div>      </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scratch"],"names":["t","useTranslation","canvasRef","useRef","ctxRef","useState","isDrawing","setIsDrawing","lastPos","x","y","useEffect","canvas","current","style","width","height","offsetWidth","offsetHeight","ctx","getContext","scale","globalCompositeOperation","fillStyle","fillRect","lineWidth","addEventListener","e","preventDefault","getMousePos","canvasDom","mouseEvent","rect","getBoundingClientRect","touches","clientX","left","clientY","top","stopDrawing","closePath","id","className","styles","onClick","ref","onMouseDown","nativeEvent","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","onTouchMove"],"sourceRoot":""}